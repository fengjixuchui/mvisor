// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xhci_host.proto

#ifndef PROTOBUF_xhci_5fhost_2eproto__INCLUDED
#define PROTOBUF_xhci_5fhost_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_xhci_5fhost_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXhciHostState_OperationalImpl();
void InitDefaultsXhciHostState_Operational();
void InitDefaultsXhciHostState_RuntimeImpl();
void InitDefaultsXhciHostState_Runtime();
void InitDefaultsXhciHostState_CommandRingImpl();
void InitDefaultsXhciHostState_CommandRing();
void InitDefaultsXhciHostState_PortImpl();
void InitDefaultsXhciHostState_Port();
void InitDefaultsXhciHostState_SlotImpl();
void InitDefaultsXhciHostState_Slot();
void InitDefaultsXhciHostState_InterruptImpl();
void InitDefaultsXhciHostState_Interrupt();
void InitDefaultsXhciHostStateImpl();
void InitDefaultsXhciHostState();
inline void InitDefaults() {
  InitDefaultsXhciHostState_Operational();
  InitDefaultsXhciHostState_Runtime();
  InitDefaultsXhciHostState_CommandRing();
  InitDefaultsXhciHostState_Port();
  InitDefaultsXhciHostState_Slot();
  InitDefaultsXhciHostState_Interrupt();
  InitDefaultsXhciHostState();
}
}  // namespace protobuf_xhci_5fhost_2eproto
class XhciHostState;
class XhciHostStateDefaultTypeInternal;
extern XhciHostStateDefaultTypeInternal _XhciHostState_default_instance_;
class XhciHostState_CommandRing;
class XhciHostState_CommandRingDefaultTypeInternal;
extern XhciHostState_CommandRingDefaultTypeInternal _XhciHostState_CommandRing_default_instance_;
class XhciHostState_Interrupt;
class XhciHostState_InterruptDefaultTypeInternal;
extern XhciHostState_InterruptDefaultTypeInternal _XhciHostState_Interrupt_default_instance_;
class XhciHostState_Operational;
class XhciHostState_OperationalDefaultTypeInternal;
extern XhciHostState_OperationalDefaultTypeInternal _XhciHostState_Operational_default_instance_;
class XhciHostState_Port;
class XhciHostState_PortDefaultTypeInternal;
extern XhciHostState_PortDefaultTypeInternal _XhciHostState_Port_default_instance_;
class XhciHostState_Runtime;
class XhciHostState_RuntimeDefaultTypeInternal;
extern XhciHostState_RuntimeDefaultTypeInternal _XhciHostState_Runtime_default_instance_;
class XhciHostState_Slot;
class XhciHostState_SlotDefaultTypeInternal;
extern XhciHostState_SlotDefaultTypeInternal _XhciHostState_Slot_default_instance_;

// ===================================================================

class XhciHostState_Operational : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XhciHostState.Operational) */ {
 public:
  XhciHostState_Operational();
  virtual ~XhciHostState_Operational();

  XhciHostState_Operational(const XhciHostState_Operational& from);

  inline XhciHostState_Operational& operator=(const XhciHostState_Operational& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XhciHostState_Operational(XhciHostState_Operational&& from) noexcept
    : XhciHostState_Operational() {
    *this = ::std::move(from);
  }

  inline XhciHostState_Operational& operator=(XhciHostState_Operational&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XhciHostState_Operational& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XhciHostState_Operational* internal_default_instance() {
    return reinterpret_cast<const XhciHostState_Operational*>(
               &_XhciHostState_Operational_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XhciHostState_Operational* other);
  friend void swap(XhciHostState_Operational& a, XhciHostState_Operational& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XhciHostState_Operational* New() const PROTOBUF_FINAL { return New(NULL); }

  XhciHostState_Operational* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XhciHostState_Operational& from);
  void MergeFrom(const XhciHostState_Operational& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XhciHostState_Operational* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 usb_command = 1;
  void clear_usb_command();
  static const int kUsbCommandFieldNumber = 1;
  ::google::protobuf::uint32 usb_command() const;
  void set_usb_command(::google::protobuf::uint32 value);

  // uint32 usb_status = 2;
  void clear_usb_status();
  static const int kUsbStatusFieldNumber = 2;
  ::google::protobuf::uint32 usb_status() const;
  void set_usb_status(::google::protobuf::uint32 value);

  // uint64 command_ring_control = 4;
  void clear_command_ring_control();
  static const int kCommandRingControlFieldNumber = 4;
  ::google::protobuf::uint64 command_ring_control() const;
  void set_command_ring_control(::google::protobuf::uint64 value);

  // uint32 device_notification_control = 3;
  void clear_device_notification_control();
  static const int kDeviceNotificationControlFieldNumber = 3;
  ::google::protobuf::uint32 device_notification_control() const;
  void set_device_notification_control(::google::protobuf::uint32 value);

  // uint32 configure = 6;
  void clear_configure();
  static const int kConfigureFieldNumber = 6;
  ::google::protobuf::uint32 configure() const;
  void set_configure(::google::protobuf::uint32 value);

  // uint64 context_base_array_pointer = 5;
  void clear_context_base_array_pointer();
  static const int kContextBaseArrayPointerFieldNumber = 5;
  ::google::protobuf::uint64 context_base_array_pointer() const;
  void set_context_base_array_pointer(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XhciHostState.Operational)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 usb_command_;
  ::google::protobuf::uint32 usb_status_;
  ::google::protobuf::uint64 command_ring_control_;
  ::google::protobuf::uint32 device_notification_control_;
  ::google::protobuf::uint32 configure_;
  ::google::protobuf::uint64 context_base_array_pointer_;
  mutable int _cached_size_;
  friend struct ::protobuf_xhci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_xhci_5fhost_2eproto::InitDefaultsXhciHostState_OperationalImpl();
};
// -------------------------------------------------------------------

class XhciHostState_Runtime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XhciHostState.Runtime) */ {
 public:
  XhciHostState_Runtime();
  virtual ~XhciHostState_Runtime();

  XhciHostState_Runtime(const XhciHostState_Runtime& from);

  inline XhciHostState_Runtime& operator=(const XhciHostState_Runtime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XhciHostState_Runtime(XhciHostState_Runtime&& from) noexcept
    : XhciHostState_Runtime() {
    *this = ::std::move(from);
  }

  inline XhciHostState_Runtime& operator=(XhciHostState_Runtime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XhciHostState_Runtime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XhciHostState_Runtime* internal_default_instance() {
    return reinterpret_cast<const XhciHostState_Runtime*>(
               &_XhciHostState_Runtime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XhciHostState_Runtime* other);
  friend void swap(XhciHostState_Runtime& a, XhciHostState_Runtime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XhciHostState_Runtime* New() const PROTOBUF_FINAL { return New(NULL); }

  XhciHostState_Runtime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XhciHostState_Runtime& from);
  void MergeFrom(const XhciHostState_Runtime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XhciHostState_Runtime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 microframe_index = 1;
  void clear_microframe_index();
  static const int kMicroframeIndexFieldNumber = 1;
  ::google::protobuf::uint32 microframe_index() const;
  void set_microframe_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XhciHostState.Runtime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 microframe_index_;
  mutable int _cached_size_;
  friend struct ::protobuf_xhci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_xhci_5fhost_2eproto::InitDefaultsXhciHostState_RuntimeImpl();
};
// -------------------------------------------------------------------

class XhciHostState_CommandRing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XhciHostState.CommandRing) */ {
 public:
  XhciHostState_CommandRing();
  virtual ~XhciHostState_CommandRing();

  XhciHostState_CommandRing(const XhciHostState_CommandRing& from);

  inline XhciHostState_CommandRing& operator=(const XhciHostState_CommandRing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XhciHostState_CommandRing(XhciHostState_CommandRing&& from) noexcept
    : XhciHostState_CommandRing() {
    *this = ::std::move(from);
  }

  inline XhciHostState_CommandRing& operator=(XhciHostState_CommandRing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XhciHostState_CommandRing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XhciHostState_CommandRing* internal_default_instance() {
    return reinterpret_cast<const XhciHostState_CommandRing*>(
               &_XhciHostState_CommandRing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(XhciHostState_CommandRing* other);
  friend void swap(XhciHostState_CommandRing& a, XhciHostState_CommandRing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XhciHostState_CommandRing* New() const PROTOBUF_FINAL { return New(NULL); }

  XhciHostState_CommandRing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XhciHostState_CommandRing& from);
  void MergeFrom(const XhciHostState_CommandRing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XhciHostState_CommandRing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dequeue = 1;
  void clear_dequeue();
  static const int kDequeueFieldNumber = 1;
  ::google::protobuf::uint32 dequeue() const;
  void set_dequeue(::google::protobuf::uint32 value);

  // bool consumer_cycle_bit = 2;
  void clear_consumer_cycle_bit();
  static const int kConsumerCycleBitFieldNumber = 2;
  bool consumer_cycle_bit() const;
  void set_consumer_cycle_bit(bool value);

  // @@protoc_insertion_point(class_scope:XhciHostState.CommandRing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dequeue_;
  bool consumer_cycle_bit_;
  mutable int _cached_size_;
  friend struct ::protobuf_xhci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_xhci_5fhost_2eproto::InitDefaultsXhciHostState_CommandRingImpl();
};
// -------------------------------------------------------------------

class XhciHostState_Port : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XhciHostState.Port) */ {
 public:
  XhciHostState_Port();
  virtual ~XhciHostState_Port();

  XhciHostState_Port(const XhciHostState_Port& from);

  inline XhciHostState_Port& operator=(const XhciHostState_Port& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XhciHostState_Port(XhciHostState_Port&& from) noexcept
    : XhciHostState_Port() {
    *this = ::std::move(from);
  }

  inline XhciHostState_Port& operator=(XhciHostState_Port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XhciHostState_Port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XhciHostState_Port* internal_default_instance() {
    return reinterpret_cast<const XhciHostState_Port*>(
               &_XhciHostState_Port_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XhciHostState_Port* other);
  friend void swap(XhciHostState_Port& a, XhciHostState_Port& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XhciHostState_Port* New() const PROTOBUF_FINAL { return New(NULL); }

  XhciHostState_Port* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XhciHostState_Port& from);
  void MergeFrom(const XhciHostState_Port& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XhciHostState_Port* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 status_control = 1;
  void clear_status_control();
  static const int kStatusControlFieldNumber = 1;
  ::google::protobuf::uint32 status_control() const;
  void set_status_control(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XhciHostState.Port)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 status_control_;
  mutable int _cached_size_;
  friend struct ::protobuf_xhci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_xhci_5fhost_2eproto::InitDefaultsXhciHostState_PortImpl();
};
// -------------------------------------------------------------------

class XhciHostState_Slot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XhciHostState.Slot) */ {
 public:
  XhciHostState_Slot();
  virtual ~XhciHostState_Slot();

  XhciHostState_Slot(const XhciHostState_Slot& from);

  inline XhciHostState_Slot& operator=(const XhciHostState_Slot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XhciHostState_Slot(XhciHostState_Slot&& from) noexcept
    : XhciHostState_Slot() {
    *this = ::std::move(from);
  }

  inline XhciHostState_Slot& operator=(XhciHostState_Slot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XhciHostState_Slot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XhciHostState_Slot* internal_default_instance() {
    return reinterpret_cast<const XhciHostState_Slot*>(
               &_XhciHostState_Slot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XhciHostState_Slot* other);
  friend void swap(XhciHostState_Slot& a, XhciHostState_Slot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XhciHostState_Slot* New() const PROTOBUF_FINAL { return New(NULL); }

  XhciHostState_Slot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XhciHostState_Slot& from);
  void MergeFrom(const XhciHostState_Slot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XhciHostState_Slot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool enabled = 1;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // bool addressed = 2;
  void clear_addressed();
  static const int kAddressedFieldNumber = 2;
  bool addressed() const;
  void set_addressed(bool value);

  // @@protoc_insertion_point(class_scope:XhciHostState.Slot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool enabled_;
  bool addressed_;
  mutable int _cached_size_;
  friend struct ::protobuf_xhci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_xhci_5fhost_2eproto::InitDefaultsXhciHostState_SlotImpl();
};
// -------------------------------------------------------------------

class XhciHostState_Interrupt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XhciHostState.Interrupt) */ {
 public:
  XhciHostState_Interrupt();
  virtual ~XhciHostState_Interrupt();

  XhciHostState_Interrupt(const XhciHostState_Interrupt& from);

  inline XhciHostState_Interrupt& operator=(const XhciHostState_Interrupt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XhciHostState_Interrupt(XhciHostState_Interrupt&& from) noexcept
    : XhciHostState_Interrupt() {
    *this = ::std::move(from);
  }

  inline XhciHostState_Interrupt& operator=(XhciHostState_Interrupt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XhciHostState_Interrupt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XhciHostState_Interrupt* internal_default_instance() {
    return reinterpret_cast<const XhciHostState_Interrupt*>(
               &_XhciHostState_Interrupt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XhciHostState_Interrupt* other);
  friend void swap(XhciHostState_Interrupt& a, XhciHostState_Interrupt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XhciHostState_Interrupt* New() const PROTOBUF_FINAL { return New(NULL); }

  XhciHostState_Interrupt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XhciHostState_Interrupt& from);
  void MergeFrom(const XhciHostState_Interrupt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XhciHostState_Interrupt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 management = 1;
  void clear_management();
  static const int kManagementFieldNumber = 1;
  ::google::protobuf::uint32 management() const;
  void set_management(::google::protobuf::uint32 value);

  // uint32 moderation = 2;
  void clear_moderation();
  static const int kModerationFieldNumber = 2;
  ::google::protobuf::uint32 moderation() const;
  void set_moderation(::google::protobuf::uint32 value);

  // uint64 event_ring_table_base = 4;
  void clear_event_ring_table_base();
  static const int kEventRingTableBaseFieldNumber = 4;
  ::google::protobuf::uint64 event_ring_table_base() const;
  void set_event_ring_table_base(::google::protobuf::uint64 value);

  // uint64 event_ring_dequeue_pointer = 5;
  void clear_event_ring_dequeue_pointer();
  static const int kEventRingDequeuePointerFieldNumber = 5;
  ::google::protobuf::uint64 event_ring_dequeue_pointer() const;
  void set_event_ring_dequeue_pointer(::google::protobuf::uint64 value);

  // uint32 event_ring_table_size = 3;
  void clear_event_ring_table_size();
  static const int kEventRingTableSizeFieldNumber = 3;
  ::google::protobuf::uint32 event_ring_table_size() const;
  void set_event_ring_table_size(::google::protobuf::uint32 value);

  // uint32 event_ring_segment_size = 7;
  void clear_event_ring_segment_size();
  static const int kEventRingSegmentSizeFieldNumber = 7;
  ::google::protobuf::uint32 event_ring_segment_size() const;
  void set_event_ring_segment_size(::google::protobuf::uint32 value);

  // uint64 event_ring_segment_start = 6;
  void clear_event_ring_segment_start();
  static const int kEventRingSegmentStartFieldNumber = 6;
  ::google::protobuf::uint64 event_ring_segment_start() const;
  void set_event_ring_segment_start(::google::protobuf::uint64 value);

  // uint64 event_ring_enqueue_index = 8;
  void clear_event_ring_enqueue_index();
  static const int kEventRingEnqueueIndexFieldNumber = 8;
  ::google::protobuf::uint64 event_ring_enqueue_index() const;
  void set_event_ring_enqueue_index(::google::protobuf::uint64 value);

  // bool event_ring_producer_cycle_bit = 9;
  void clear_event_ring_producer_cycle_bit();
  static const int kEventRingProducerCycleBitFieldNumber = 9;
  bool event_ring_producer_cycle_bit() const;
  void set_event_ring_producer_cycle_bit(bool value);

  // @@protoc_insertion_point(class_scope:XhciHostState.Interrupt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 management_;
  ::google::protobuf::uint32 moderation_;
  ::google::protobuf::uint64 event_ring_table_base_;
  ::google::protobuf::uint64 event_ring_dequeue_pointer_;
  ::google::protobuf::uint32 event_ring_table_size_;
  ::google::protobuf::uint32 event_ring_segment_size_;
  ::google::protobuf::uint64 event_ring_segment_start_;
  ::google::protobuf::uint64 event_ring_enqueue_index_;
  bool event_ring_producer_cycle_bit_;
  mutable int _cached_size_;
  friend struct ::protobuf_xhci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_xhci_5fhost_2eproto::InitDefaultsXhciHostState_InterruptImpl();
};
// -------------------------------------------------------------------

class XhciHostState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XhciHostState) */ {
 public:
  XhciHostState();
  virtual ~XhciHostState();

  XhciHostState(const XhciHostState& from);

  inline XhciHostState& operator=(const XhciHostState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XhciHostState(XhciHostState&& from) noexcept
    : XhciHostState() {
    *this = ::std::move(from);
  }

  inline XhciHostState& operator=(XhciHostState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XhciHostState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XhciHostState* internal_default_instance() {
    return reinterpret_cast<const XhciHostState*>(
               &_XhciHostState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XhciHostState* other);
  friend void swap(XhciHostState& a, XhciHostState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XhciHostState* New() const PROTOBUF_FINAL { return New(NULL); }

  XhciHostState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XhciHostState& from);
  void MergeFrom(const XhciHostState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XhciHostState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XhciHostState_Operational Operational;
  typedef XhciHostState_Runtime Runtime;
  typedef XhciHostState_CommandRing CommandRing;
  typedef XhciHostState_Port Port;
  typedef XhciHostState_Slot Slot;
  typedef XhciHostState_Interrupt Interrupt;

  // accessors -------------------------------------------------------

  // repeated .XhciHostState.Port ports = 5;
  int ports_size() const;
  void clear_ports();
  static const int kPortsFieldNumber = 5;
  const ::XhciHostState_Port& ports(int index) const;
  ::XhciHostState_Port* mutable_ports(int index);
  ::XhciHostState_Port* add_ports();
  ::google::protobuf::RepeatedPtrField< ::XhciHostState_Port >*
      mutable_ports();
  const ::google::protobuf::RepeatedPtrField< ::XhciHostState_Port >&
      ports() const;

  // repeated .XhciHostState.Slot slots = 6;
  int slots_size() const;
  void clear_slots();
  static const int kSlotsFieldNumber = 6;
  const ::XhciHostState_Slot& slots(int index) const;
  ::XhciHostState_Slot* mutable_slots(int index);
  ::XhciHostState_Slot* add_slots();
  ::google::protobuf::RepeatedPtrField< ::XhciHostState_Slot >*
      mutable_slots();
  const ::google::protobuf::RepeatedPtrField< ::XhciHostState_Slot >&
      slots() const;

  // repeated .XhciHostState.Interrupt interrupts = 7;
  int interrupts_size() const;
  void clear_interrupts();
  static const int kInterruptsFieldNumber = 7;
  const ::XhciHostState_Interrupt& interrupts(int index) const;
  ::XhciHostState_Interrupt* mutable_interrupts(int index);
  ::XhciHostState_Interrupt* add_interrupts();
  ::google::protobuf::RepeatedPtrField< ::XhciHostState_Interrupt >*
      mutable_interrupts();
  const ::google::protobuf::RepeatedPtrField< ::XhciHostState_Interrupt >&
      interrupts() const;

  // .XhciHostState.Operational operational = 2;
  bool has_operational() const;
  void clear_operational();
  static const int kOperationalFieldNumber = 2;
  const ::XhciHostState_Operational& operational() const;
  ::XhciHostState_Operational* release_operational();
  ::XhciHostState_Operational* mutable_operational();
  void set_allocated_operational(::XhciHostState_Operational* operational);

  // .XhciHostState.Runtime runtime = 3;
  bool has_runtime() const;
  void clear_runtime();
  static const int kRuntimeFieldNumber = 3;
  const ::XhciHostState_Runtime& runtime() const;
  ::XhciHostState_Runtime* release_runtime();
  ::XhciHostState_Runtime* mutable_runtime();
  void set_allocated_runtime(::XhciHostState_Runtime* runtime);

  // .XhciHostState.CommandRing command_ring = 4;
  bool has_command_ring() const;
  void clear_command_ring();
  static const int kCommandRingFieldNumber = 4;
  const ::XhciHostState_CommandRing& command_ring() const;
  ::XhciHostState_CommandRing* release_command_ring();
  ::XhciHostState_CommandRing* mutable_command_ring();
  void set_allocated_command_ring(::XhciHostState_CommandRing* command_ring);

  // @@protoc_insertion_point(class_scope:XhciHostState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XhciHostState_Port > ports_;
  ::google::protobuf::RepeatedPtrField< ::XhciHostState_Slot > slots_;
  ::google::protobuf::RepeatedPtrField< ::XhciHostState_Interrupt > interrupts_;
  ::XhciHostState_Operational* operational_;
  ::XhciHostState_Runtime* runtime_;
  ::XhciHostState_CommandRing* command_ring_;
  mutable int _cached_size_;
  friend struct ::protobuf_xhci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_xhci_5fhost_2eproto::InitDefaultsXhciHostStateImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XhciHostState_Operational

// uint32 usb_command = 1;
inline void XhciHostState_Operational::clear_usb_command() {
  usb_command_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Operational::usb_command() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Operational.usb_command)
  return usb_command_;
}
inline void XhciHostState_Operational::set_usb_command(::google::protobuf::uint32 value) {
  
  usb_command_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Operational.usb_command)
}

// uint32 usb_status = 2;
inline void XhciHostState_Operational::clear_usb_status() {
  usb_status_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Operational::usb_status() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Operational.usb_status)
  return usb_status_;
}
inline void XhciHostState_Operational::set_usb_status(::google::protobuf::uint32 value) {
  
  usb_status_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Operational.usb_status)
}

// uint32 device_notification_control = 3;
inline void XhciHostState_Operational::clear_device_notification_control() {
  device_notification_control_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Operational::device_notification_control() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Operational.device_notification_control)
  return device_notification_control_;
}
inline void XhciHostState_Operational::set_device_notification_control(::google::protobuf::uint32 value) {
  
  device_notification_control_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Operational.device_notification_control)
}

// uint64 command_ring_control = 4;
inline void XhciHostState_Operational::clear_command_ring_control() {
  command_ring_control_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XhciHostState_Operational::command_ring_control() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Operational.command_ring_control)
  return command_ring_control_;
}
inline void XhciHostState_Operational::set_command_ring_control(::google::protobuf::uint64 value) {
  
  command_ring_control_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Operational.command_ring_control)
}

// uint64 context_base_array_pointer = 5;
inline void XhciHostState_Operational::clear_context_base_array_pointer() {
  context_base_array_pointer_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XhciHostState_Operational::context_base_array_pointer() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Operational.context_base_array_pointer)
  return context_base_array_pointer_;
}
inline void XhciHostState_Operational::set_context_base_array_pointer(::google::protobuf::uint64 value) {
  
  context_base_array_pointer_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Operational.context_base_array_pointer)
}

// uint32 configure = 6;
inline void XhciHostState_Operational::clear_configure() {
  configure_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Operational::configure() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Operational.configure)
  return configure_;
}
inline void XhciHostState_Operational::set_configure(::google::protobuf::uint32 value) {
  
  configure_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Operational.configure)
}

// -------------------------------------------------------------------

// XhciHostState_Runtime

// uint32 microframe_index = 1;
inline void XhciHostState_Runtime::clear_microframe_index() {
  microframe_index_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Runtime::microframe_index() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Runtime.microframe_index)
  return microframe_index_;
}
inline void XhciHostState_Runtime::set_microframe_index(::google::protobuf::uint32 value) {
  
  microframe_index_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Runtime.microframe_index)
}

// -------------------------------------------------------------------

// XhciHostState_CommandRing

// uint32 dequeue = 1;
inline void XhciHostState_CommandRing::clear_dequeue() {
  dequeue_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_CommandRing::dequeue() const {
  // @@protoc_insertion_point(field_get:XhciHostState.CommandRing.dequeue)
  return dequeue_;
}
inline void XhciHostState_CommandRing::set_dequeue(::google::protobuf::uint32 value) {
  
  dequeue_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.CommandRing.dequeue)
}

// bool consumer_cycle_bit = 2;
inline void XhciHostState_CommandRing::clear_consumer_cycle_bit() {
  consumer_cycle_bit_ = false;
}
inline bool XhciHostState_CommandRing::consumer_cycle_bit() const {
  // @@protoc_insertion_point(field_get:XhciHostState.CommandRing.consumer_cycle_bit)
  return consumer_cycle_bit_;
}
inline void XhciHostState_CommandRing::set_consumer_cycle_bit(bool value) {
  
  consumer_cycle_bit_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.CommandRing.consumer_cycle_bit)
}

// -------------------------------------------------------------------

// XhciHostState_Port

// uint32 status_control = 1;
inline void XhciHostState_Port::clear_status_control() {
  status_control_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Port::status_control() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Port.status_control)
  return status_control_;
}
inline void XhciHostState_Port::set_status_control(::google::protobuf::uint32 value) {
  
  status_control_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Port.status_control)
}

// -------------------------------------------------------------------

// XhciHostState_Slot

// bool enabled = 1;
inline void XhciHostState_Slot::clear_enabled() {
  enabled_ = false;
}
inline bool XhciHostState_Slot::enabled() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Slot.enabled)
  return enabled_;
}
inline void XhciHostState_Slot::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Slot.enabled)
}

// bool addressed = 2;
inline void XhciHostState_Slot::clear_addressed() {
  addressed_ = false;
}
inline bool XhciHostState_Slot::addressed() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Slot.addressed)
  return addressed_;
}
inline void XhciHostState_Slot::set_addressed(bool value) {
  
  addressed_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Slot.addressed)
}

// -------------------------------------------------------------------

// XhciHostState_Interrupt

// uint32 management = 1;
inline void XhciHostState_Interrupt::clear_management() {
  management_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Interrupt::management() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.management)
  return management_;
}
inline void XhciHostState_Interrupt::set_management(::google::protobuf::uint32 value) {
  
  management_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.management)
}

// uint32 moderation = 2;
inline void XhciHostState_Interrupt::clear_moderation() {
  moderation_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Interrupt::moderation() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.moderation)
  return moderation_;
}
inline void XhciHostState_Interrupt::set_moderation(::google::protobuf::uint32 value) {
  
  moderation_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.moderation)
}

// uint32 event_ring_table_size = 3;
inline void XhciHostState_Interrupt::clear_event_ring_table_size() {
  event_ring_table_size_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Interrupt::event_ring_table_size() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.event_ring_table_size)
  return event_ring_table_size_;
}
inline void XhciHostState_Interrupt::set_event_ring_table_size(::google::protobuf::uint32 value) {
  
  event_ring_table_size_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.event_ring_table_size)
}

// uint64 event_ring_table_base = 4;
inline void XhciHostState_Interrupt::clear_event_ring_table_base() {
  event_ring_table_base_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XhciHostState_Interrupt::event_ring_table_base() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.event_ring_table_base)
  return event_ring_table_base_;
}
inline void XhciHostState_Interrupt::set_event_ring_table_base(::google::protobuf::uint64 value) {
  
  event_ring_table_base_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.event_ring_table_base)
}

// uint64 event_ring_dequeue_pointer = 5;
inline void XhciHostState_Interrupt::clear_event_ring_dequeue_pointer() {
  event_ring_dequeue_pointer_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XhciHostState_Interrupt::event_ring_dequeue_pointer() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.event_ring_dequeue_pointer)
  return event_ring_dequeue_pointer_;
}
inline void XhciHostState_Interrupt::set_event_ring_dequeue_pointer(::google::protobuf::uint64 value) {
  
  event_ring_dequeue_pointer_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.event_ring_dequeue_pointer)
}

// uint64 event_ring_segment_start = 6;
inline void XhciHostState_Interrupt::clear_event_ring_segment_start() {
  event_ring_segment_start_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XhciHostState_Interrupt::event_ring_segment_start() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.event_ring_segment_start)
  return event_ring_segment_start_;
}
inline void XhciHostState_Interrupt::set_event_ring_segment_start(::google::protobuf::uint64 value) {
  
  event_ring_segment_start_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.event_ring_segment_start)
}

// uint32 event_ring_segment_size = 7;
inline void XhciHostState_Interrupt::clear_event_ring_segment_size() {
  event_ring_segment_size_ = 0u;
}
inline ::google::protobuf::uint32 XhciHostState_Interrupt::event_ring_segment_size() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.event_ring_segment_size)
  return event_ring_segment_size_;
}
inline void XhciHostState_Interrupt::set_event_ring_segment_size(::google::protobuf::uint32 value) {
  
  event_ring_segment_size_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.event_ring_segment_size)
}

// uint64 event_ring_enqueue_index = 8;
inline void XhciHostState_Interrupt::clear_event_ring_enqueue_index() {
  event_ring_enqueue_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XhciHostState_Interrupt::event_ring_enqueue_index() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.event_ring_enqueue_index)
  return event_ring_enqueue_index_;
}
inline void XhciHostState_Interrupt::set_event_ring_enqueue_index(::google::protobuf::uint64 value) {
  
  event_ring_enqueue_index_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.event_ring_enqueue_index)
}

// bool event_ring_producer_cycle_bit = 9;
inline void XhciHostState_Interrupt::clear_event_ring_producer_cycle_bit() {
  event_ring_producer_cycle_bit_ = false;
}
inline bool XhciHostState_Interrupt::event_ring_producer_cycle_bit() const {
  // @@protoc_insertion_point(field_get:XhciHostState.Interrupt.event_ring_producer_cycle_bit)
  return event_ring_producer_cycle_bit_;
}
inline void XhciHostState_Interrupt::set_event_ring_producer_cycle_bit(bool value) {
  
  event_ring_producer_cycle_bit_ = value;
  // @@protoc_insertion_point(field_set:XhciHostState.Interrupt.event_ring_producer_cycle_bit)
}

// -------------------------------------------------------------------

// XhciHostState

// .XhciHostState.Operational operational = 2;
inline bool XhciHostState::has_operational() const {
  return this != internal_default_instance() && operational_ != NULL;
}
inline void XhciHostState::clear_operational() {
  if (GetArenaNoVirtual() == NULL && operational_ != NULL) {
    delete operational_;
  }
  operational_ = NULL;
}
inline const ::XhciHostState_Operational& XhciHostState::operational() const {
  const ::XhciHostState_Operational* p = operational_;
  // @@protoc_insertion_point(field_get:XhciHostState.operational)
  return p != NULL ? *p : *reinterpret_cast<const ::XhciHostState_Operational*>(
      &::_XhciHostState_Operational_default_instance_);
}
inline ::XhciHostState_Operational* XhciHostState::release_operational() {
  // @@protoc_insertion_point(field_release:XhciHostState.operational)
  
  ::XhciHostState_Operational* temp = operational_;
  operational_ = NULL;
  return temp;
}
inline ::XhciHostState_Operational* XhciHostState::mutable_operational() {
  
  if (operational_ == NULL) {
    operational_ = new ::XhciHostState_Operational;
  }
  // @@protoc_insertion_point(field_mutable:XhciHostState.operational)
  return operational_;
}
inline void XhciHostState::set_allocated_operational(::XhciHostState_Operational* operational) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete operational_;
  }
  if (operational) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operational = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operational, submessage_arena);
    }
    
  } else {
    
  }
  operational_ = operational;
  // @@protoc_insertion_point(field_set_allocated:XhciHostState.operational)
}

// .XhciHostState.Runtime runtime = 3;
inline bool XhciHostState::has_runtime() const {
  return this != internal_default_instance() && runtime_ != NULL;
}
inline void XhciHostState::clear_runtime() {
  if (GetArenaNoVirtual() == NULL && runtime_ != NULL) {
    delete runtime_;
  }
  runtime_ = NULL;
}
inline const ::XhciHostState_Runtime& XhciHostState::runtime() const {
  const ::XhciHostState_Runtime* p = runtime_;
  // @@protoc_insertion_point(field_get:XhciHostState.runtime)
  return p != NULL ? *p : *reinterpret_cast<const ::XhciHostState_Runtime*>(
      &::_XhciHostState_Runtime_default_instance_);
}
inline ::XhciHostState_Runtime* XhciHostState::release_runtime() {
  // @@protoc_insertion_point(field_release:XhciHostState.runtime)
  
  ::XhciHostState_Runtime* temp = runtime_;
  runtime_ = NULL;
  return temp;
}
inline ::XhciHostState_Runtime* XhciHostState::mutable_runtime() {
  
  if (runtime_ == NULL) {
    runtime_ = new ::XhciHostState_Runtime;
  }
  // @@protoc_insertion_point(field_mutable:XhciHostState.runtime)
  return runtime_;
}
inline void XhciHostState::set_allocated_runtime(::XhciHostState_Runtime* runtime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete runtime_;
  }
  if (runtime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      runtime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, runtime, submessage_arena);
    }
    
  } else {
    
  }
  runtime_ = runtime;
  // @@protoc_insertion_point(field_set_allocated:XhciHostState.runtime)
}

// .XhciHostState.CommandRing command_ring = 4;
inline bool XhciHostState::has_command_ring() const {
  return this != internal_default_instance() && command_ring_ != NULL;
}
inline void XhciHostState::clear_command_ring() {
  if (GetArenaNoVirtual() == NULL && command_ring_ != NULL) {
    delete command_ring_;
  }
  command_ring_ = NULL;
}
inline const ::XhciHostState_CommandRing& XhciHostState::command_ring() const {
  const ::XhciHostState_CommandRing* p = command_ring_;
  // @@protoc_insertion_point(field_get:XhciHostState.command_ring)
  return p != NULL ? *p : *reinterpret_cast<const ::XhciHostState_CommandRing*>(
      &::_XhciHostState_CommandRing_default_instance_);
}
inline ::XhciHostState_CommandRing* XhciHostState::release_command_ring() {
  // @@protoc_insertion_point(field_release:XhciHostState.command_ring)
  
  ::XhciHostState_CommandRing* temp = command_ring_;
  command_ring_ = NULL;
  return temp;
}
inline ::XhciHostState_CommandRing* XhciHostState::mutable_command_ring() {
  
  if (command_ring_ == NULL) {
    command_ring_ = new ::XhciHostState_CommandRing;
  }
  // @@protoc_insertion_point(field_mutable:XhciHostState.command_ring)
  return command_ring_;
}
inline void XhciHostState::set_allocated_command_ring(::XhciHostState_CommandRing* command_ring) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete command_ring_;
  }
  if (command_ring) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      command_ring = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, command_ring, submessage_arena);
    }
    
  } else {
    
  }
  command_ring_ = command_ring;
  // @@protoc_insertion_point(field_set_allocated:XhciHostState.command_ring)
}

// repeated .XhciHostState.Port ports = 5;
inline int XhciHostState::ports_size() const {
  return ports_.size();
}
inline void XhciHostState::clear_ports() {
  ports_.Clear();
}
inline const ::XhciHostState_Port& XhciHostState::ports(int index) const {
  // @@protoc_insertion_point(field_get:XhciHostState.ports)
  return ports_.Get(index);
}
inline ::XhciHostState_Port* XhciHostState::mutable_ports(int index) {
  // @@protoc_insertion_point(field_mutable:XhciHostState.ports)
  return ports_.Mutable(index);
}
inline ::XhciHostState_Port* XhciHostState::add_ports() {
  // @@protoc_insertion_point(field_add:XhciHostState.ports)
  return ports_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XhciHostState_Port >*
XhciHostState::mutable_ports() {
  // @@protoc_insertion_point(field_mutable_list:XhciHostState.ports)
  return &ports_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XhciHostState_Port >&
XhciHostState::ports() const {
  // @@protoc_insertion_point(field_list:XhciHostState.ports)
  return ports_;
}

// repeated .XhciHostState.Slot slots = 6;
inline int XhciHostState::slots_size() const {
  return slots_.size();
}
inline void XhciHostState::clear_slots() {
  slots_.Clear();
}
inline const ::XhciHostState_Slot& XhciHostState::slots(int index) const {
  // @@protoc_insertion_point(field_get:XhciHostState.slots)
  return slots_.Get(index);
}
inline ::XhciHostState_Slot* XhciHostState::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:XhciHostState.slots)
  return slots_.Mutable(index);
}
inline ::XhciHostState_Slot* XhciHostState::add_slots() {
  // @@protoc_insertion_point(field_add:XhciHostState.slots)
  return slots_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XhciHostState_Slot >*
XhciHostState::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:XhciHostState.slots)
  return &slots_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XhciHostState_Slot >&
XhciHostState::slots() const {
  // @@protoc_insertion_point(field_list:XhciHostState.slots)
  return slots_;
}

// repeated .XhciHostState.Interrupt interrupts = 7;
inline int XhciHostState::interrupts_size() const {
  return interrupts_.size();
}
inline void XhciHostState::clear_interrupts() {
  interrupts_.Clear();
}
inline const ::XhciHostState_Interrupt& XhciHostState::interrupts(int index) const {
  // @@protoc_insertion_point(field_get:XhciHostState.interrupts)
  return interrupts_.Get(index);
}
inline ::XhciHostState_Interrupt* XhciHostState::mutable_interrupts(int index) {
  // @@protoc_insertion_point(field_mutable:XhciHostState.interrupts)
  return interrupts_.Mutable(index);
}
inline ::XhciHostState_Interrupt* XhciHostState::add_interrupts() {
  // @@protoc_insertion_point(field_add:XhciHostState.interrupts)
  return interrupts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XhciHostState_Interrupt >*
XhciHostState::mutable_interrupts() {
  // @@protoc_insertion_point(field_mutable_list:XhciHostState.interrupts)
  return &interrupts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XhciHostState_Interrupt >&
XhciHostState::interrupts() const {
  // @@protoc_insertion_point(field_list:XhciHostState.interrupts)
  return interrupts_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_xhci_5fhost_2eproto__INCLUDED
