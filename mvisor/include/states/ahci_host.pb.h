// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ahci_host.proto

#ifndef PROTOBUF_ahci_5fhost_2eproto__INCLUDED
#define PROTOBUF_ahci_5fhost_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ahci_5fhost_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAhciHostState_ControlRegistersImpl();
void InitDefaultsAhciHostState_ControlRegisters();
void InitDefaultsAhciHostState_PortRegistersImpl();
void InitDefaultsAhciHostState_PortRegisters();
void InitDefaultsAhciHostState_PortStateImpl();
void InitDefaultsAhciHostState_PortState();
void InitDefaultsAhciHostStateImpl();
void InitDefaultsAhciHostState();
inline void InitDefaults() {
  InitDefaultsAhciHostState_ControlRegisters();
  InitDefaultsAhciHostState_PortRegisters();
  InitDefaultsAhciHostState_PortState();
  InitDefaultsAhciHostState();
}
}  // namespace protobuf_ahci_5fhost_2eproto
class AhciHostState;
class AhciHostStateDefaultTypeInternal;
extern AhciHostStateDefaultTypeInternal _AhciHostState_default_instance_;
class AhciHostState_ControlRegisters;
class AhciHostState_ControlRegistersDefaultTypeInternal;
extern AhciHostState_ControlRegistersDefaultTypeInternal _AhciHostState_ControlRegisters_default_instance_;
class AhciHostState_PortRegisters;
class AhciHostState_PortRegistersDefaultTypeInternal;
extern AhciHostState_PortRegistersDefaultTypeInternal _AhciHostState_PortRegisters_default_instance_;
class AhciHostState_PortState;
class AhciHostState_PortStateDefaultTypeInternal;
extern AhciHostState_PortStateDefaultTypeInternal _AhciHostState_PortState_default_instance_;

// ===================================================================

class AhciHostState_ControlRegisters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AhciHostState.ControlRegisters) */ {
 public:
  AhciHostState_ControlRegisters();
  virtual ~AhciHostState_ControlRegisters();

  AhciHostState_ControlRegisters(const AhciHostState_ControlRegisters& from);

  inline AhciHostState_ControlRegisters& operator=(const AhciHostState_ControlRegisters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AhciHostState_ControlRegisters(AhciHostState_ControlRegisters&& from) noexcept
    : AhciHostState_ControlRegisters() {
    *this = ::std::move(from);
  }

  inline AhciHostState_ControlRegisters& operator=(AhciHostState_ControlRegisters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AhciHostState_ControlRegisters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AhciHostState_ControlRegisters* internal_default_instance() {
    return reinterpret_cast<const AhciHostState_ControlRegisters*>(
               &_AhciHostState_ControlRegisters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AhciHostState_ControlRegisters* other);
  friend void swap(AhciHostState_ControlRegisters& a, AhciHostState_ControlRegisters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AhciHostState_ControlRegisters* New() const PROTOBUF_FINAL { return New(NULL); }

  AhciHostState_ControlRegisters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AhciHostState_ControlRegisters& from);
  void MergeFrom(const AhciHostState_ControlRegisters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AhciHostState_ControlRegisters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 capabilities = 1;
  void clear_capabilities();
  static const int kCapabilitiesFieldNumber = 1;
  ::google::protobuf::uint32 capabilities() const;
  void set_capabilities(::google::protobuf::uint32 value);

  // uint32 global_host_control = 2;
  void clear_global_host_control();
  static const int kGlobalHostControlFieldNumber = 2;
  ::google::protobuf::uint32 global_host_control() const;
  void set_global_host_control(::google::protobuf::uint32 value);

  // uint32 irq_status = 3;
  void clear_irq_status();
  static const int kIrqStatusFieldNumber = 3;
  ::google::protobuf::uint32 irq_status() const;
  void set_irq_status(::google::protobuf::uint32 value);

  // uint32 ports_implemented = 4;
  void clear_ports_implemented();
  static const int kPortsImplementedFieldNumber = 4;
  ::google::protobuf::uint32 ports_implemented() const;
  void set_ports_implemented(::google::protobuf::uint32 value);

  // uint32 version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AhciHostState.ControlRegisters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 capabilities_;
  ::google::protobuf::uint32 global_host_control_;
  ::google::protobuf::uint32 irq_status_;
  ::google::protobuf::uint32 ports_implemented_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct ::protobuf_ahci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_ahci_5fhost_2eproto::InitDefaultsAhciHostState_ControlRegistersImpl();
};
// -------------------------------------------------------------------

class AhciHostState_PortRegisters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AhciHostState.PortRegisters) */ {
 public:
  AhciHostState_PortRegisters();
  virtual ~AhciHostState_PortRegisters();

  AhciHostState_PortRegisters(const AhciHostState_PortRegisters& from);

  inline AhciHostState_PortRegisters& operator=(const AhciHostState_PortRegisters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AhciHostState_PortRegisters(AhciHostState_PortRegisters&& from) noexcept
    : AhciHostState_PortRegisters() {
    *this = ::std::move(from);
  }

  inline AhciHostState_PortRegisters& operator=(AhciHostState_PortRegisters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AhciHostState_PortRegisters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AhciHostState_PortRegisters* internal_default_instance() {
    return reinterpret_cast<const AhciHostState_PortRegisters*>(
               &_AhciHostState_PortRegisters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AhciHostState_PortRegisters* other);
  friend void swap(AhciHostState_PortRegisters& a, AhciHostState_PortRegisters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AhciHostState_PortRegisters* New() const PROTOBUF_FINAL { return New(NULL); }

  AhciHostState_PortRegisters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AhciHostState_PortRegisters& from);
  void MergeFrom(const AhciHostState_PortRegisters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AhciHostState_PortRegisters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 command_list_base0 = 1;
  void clear_command_list_base0();
  static const int kCommandListBase0FieldNumber = 1;
  ::google::protobuf::uint32 command_list_base0() const;
  void set_command_list_base0(::google::protobuf::uint32 value);

  // uint32 command_list_base1 = 2;
  void clear_command_list_base1();
  static const int kCommandListBase1FieldNumber = 2;
  ::google::protobuf::uint32 command_list_base1() const;
  void set_command_list_base1(::google::protobuf::uint32 value);

  // uint32 fis_base0 = 3;
  void clear_fis_base0();
  static const int kFisBase0FieldNumber = 3;
  ::google::protobuf::uint32 fis_base0() const;
  void set_fis_base0(::google::protobuf::uint32 value);

  // uint32 fis_base1 = 4;
  void clear_fis_base1();
  static const int kFisBase1FieldNumber = 4;
  ::google::protobuf::uint32 fis_base1() const;
  void set_fis_base1(::google::protobuf::uint32 value);

  // uint32 irq_status = 5;
  void clear_irq_status();
  static const int kIrqStatusFieldNumber = 5;
  ::google::protobuf::uint32 irq_status() const;
  void set_irq_status(::google::protobuf::uint32 value);

  // uint32 irq_mask = 6;
  void clear_irq_mask();
  static const int kIrqMaskFieldNumber = 6;
  ::google::protobuf::uint32 irq_mask() const;
  void set_irq_mask(::google::protobuf::uint32 value);

  // uint32 command = 7;
  void clear_command();
  static const int kCommandFieldNumber = 7;
  ::google::protobuf::uint32 command() const;
  void set_command(::google::protobuf::uint32 value);

  // uint32 task_flie_data = 8;
  void clear_task_flie_data();
  static const int kTaskFlieDataFieldNumber = 8;
  ::google::protobuf::uint32 task_flie_data() const;
  void set_task_flie_data(::google::protobuf::uint32 value);

  // uint32 signature = 9;
  void clear_signature();
  static const int kSignatureFieldNumber = 9;
  ::google::protobuf::uint32 signature() const;
  void set_signature(::google::protobuf::uint32 value);

  // uint32 sata_status = 10;
  void clear_sata_status();
  static const int kSataStatusFieldNumber = 10;
  ::google::protobuf::uint32 sata_status() const;
  void set_sata_status(::google::protobuf::uint32 value);

  // uint32 sata_control = 11;
  void clear_sata_control();
  static const int kSataControlFieldNumber = 11;
  ::google::protobuf::uint32 sata_control() const;
  void set_sata_control(::google::protobuf::uint32 value);

  // uint32 sata_error = 12;
  void clear_sata_error();
  static const int kSataErrorFieldNumber = 12;
  ::google::protobuf::uint32 sata_error() const;
  void set_sata_error(::google::protobuf::uint32 value);

  // uint32 sata_active = 13;
  void clear_sata_active();
  static const int kSataActiveFieldNumber = 13;
  ::google::protobuf::uint32 sata_active() const;
  void set_sata_active(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AhciHostState.PortRegisters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 command_list_base0_;
  ::google::protobuf::uint32 command_list_base1_;
  ::google::protobuf::uint32 fis_base0_;
  ::google::protobuf::uint32 fis_base1_;
  ::google::protobuf::uint32 irq_status_;
  ::google::protobuf::uint32 irq_mask_;
  ::google::protobuf::uint32 command_;
  ::google::protobuf::uint32 task_flie_data_;
  ::google::protobuf::uint32 signature_;
  ::google::protobuf::uint32 sata_status_;
  ::google::protobuf::uint32 sata_control_;
  ::google::protobuf::uint32 sata_error_;
  ::google::protobuf::uint32 sata_active_;
  mutable int _cached_size_;
  friend struct ::protobuf_ahci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_ahci_5fhost_2eproto::InitDefaultsAhciHostState_PortRegistersImpl();
};
// -------------------------------------------------------------------

class AhciHostState_PortState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AhciHostState.PortState) */ {
 public:
  AhciHostState_PortState();
  virtual ~AhciHostState_PortState();

  AhciHostState_PortState(const AhciHostState_PortState& from);

  inline AhciHostState_PortState& operator=(const AhciHostState_PortState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AhciHostState_PortState(AhciHostState_PortState&& from) noexcept
    : AhciHostState_PortState() {
    *this = ::std::move(from);
  }

  inline AhciHostState_PortState& operator=(AhciHostState_PortState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AhciHostState_PortState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AhciHostState_PortState* internal_default_instance() {
    return reinterpret_cast<const AhciHostState_PortState*>(
               &_AhciHostState_PortState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AhciHostState_PortState* other);
  friend void swap(AhciHostState_PortState& a, AhciHostState_PortState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AhciHostState_PortState* New() const PROTOBUF_FINAL { return New(NULL); }

  AhciHostState_PortState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AhciHostState_PortState& from);
  void MergeFrom(const AhciHostState_PortState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AhciHostState_PortState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .AhciHostState.PortRegisters registers = 4;
  bool has_registers() const;
  void clear_registers();
  static const int kRegistersFieldNumber = 4;
  const ::AhciHostState_PortRegisters& registers() const;
  ::AhciHostState_PortRegisters* release_registers();
  ::AhciHostState_PortRegisters* mutable_registers();
  void set_allocated_registers(::AhciHostState_PortRegisters* registers);

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // int32 busy_slot = 2;
  void clear_busy_slot();
  static const int kBusySlotFieldNumber = 2;
  ::google::protobuf::int32 busy_slot() const;
  void set_busy_slot(::google::protobuf::int32 value);

  // bool init_d2h_sent = 3;
  void clear_init_d2h_sent();
  static const int kInitD2HSentFieldNumber = 3;
  bool init_d2h_sent() const;
  void set_init_d2h_sent(bool value);

  // @@protoc_insertion_point(class_scope:AhciHostState.PortState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AhciHostState_PortRegisters* registers_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::int32 busy_slot_;
  bool init_d2h_sent_;
  mutable int _cached_size_;
  friend struct ::protobuf_ahci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_ahci_5fhost_2eproto::InitDefaultsAhciHostState_PortStateImpl();
};
// -------------------------------------------------------------------

class AhciHostState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AhciHostState) */ {
 public:
  AhciHostState();
  virtual ~AhciHostState();

  AhciHostState(const AhciHostState& from);

  inline AhciHostState& operator=(const AhciHostState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AhciHostState(AhciHostState&& from) noexcept
    : AhciHostState() {
    *this = ::std::move(from);
  }

  inline AhciHostState& operator=(AhciHostState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AhciHostState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AhciHostState* internal_default_instance() {
    return reinterpret_cast<const AhciHostState*>(
               &_AhciHostState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AhciHostState* other);
  friend void swap(AhciHostState& a, AhciHostState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AhciHostState* New() const PROTOBUF_FINAL { return New(NULL); }

  AhciHostState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AhciHostState& from);
  void MergeFrom(const AhciHostState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AhciHostState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AhciHostState_ControlRegisters ControlRegisters;
  typedef AhciHostState_PortRegisters PortRegisters;
  typedef AhciHostState_PortState PortState;

  // accessors -------------------------------------------------------

  // repeated .AhciHostState.PortState ports = 2;
  int ports_size() const;
  void clear_ports();
  static const int kPortsFieldNumber = 2;
  const ::AhciHostState_PortState& ports(int index) const;
  ::AhciHostState_PortState* mutable_ports(int index);
  ::AhciHostState_PortState* add_ports();
  ::google::protobuf::RepeatedPtrField< ::AhciHostState_PortState >*
      mutable_ports();
  const ::google::protobuf::RepeatedPtrField< ::AhciHostState_PortState >&
      ports() const;

  // .AhciHostState.ControlRegisters control = 1;
  bool has_control() const;
  void clear_control();
  static const int kControlFieldNumber = 1;
  const ::AhciHostState_ControlRegisters& control() const;
  ::AhciHostState_ControlRegisters* release_control();
  ::AhciHostState_ControlRegisters* mutable_control();
  void set_allocated_control(::AhciHostState_ControlRegisters* control);

  // @@protoc_insertion_point(class_scope:AhciHostState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AhciHostState_PortState > ports_;
  ::AhciHostState_ControlRegisters* control_;
  mutable int _cached_size_;
  friend struct ::protobuf_ahci_5fhost_2eproto::TableStruct;
  friend void ::protobuf_ahci_5fhost_2eproto::InitDefaultsAhciHostStateImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AhciHostState_ControlRegisters

// uint32 capabilities = 1;
inline void AhciHostState_ControlRegisters::clear_capabilities() {
  capabilities_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_ControlRegisters::capabilities() const {
  // @@protoc_insertion_point(field_get:AhciHostState.ControlRegisters.capabilities)
  return capabilities_;
}
inline void AhciHostState_ControlRegisters::set_capabilities(::google::protobuf::uint32 value) {
  
  capabilities_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.ControlRegisters.capabilities)
}

// uint32 global_host_control = 2;
inline void AhciHostState_ControlRegisters::clear_global_host_control() {
  global_host_control_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_ControlRegisters::global_host_control() const {
  // @@protoc_insertion_point(field_get:AhciHostState.ControlRegisters.global_host_control)
  return global_host_control_;
}
inline void AhciHostState_ControlRegisters::set_global_host_control(::google::protobuf::uint32 value) {
  
  global_host_control_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.ControlRegisters.global_host_control)
}

// uint32 irq_status = 3;
inline void AhciHostState_ControlRegisters::clear_irq_status() {
  irq_status_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_ControlRegisters::irq_status() const {
  // @@protoc_insertion_point(field_get:AhciHostState.ControlRegisters.irq_status)
  return irq_status_;
}
inline void AhciHostState_ControlRegisters::set_irq_status(::google::protobuf::uint32 value) {
  
  irq_status_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.ControlRegisters.irq_status)
}

// uint32 ports_implemented = 4;
inline void AhciHostState_ControlRegisters::clear_ports_implemented() {
  ports_implemented_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_ControlRegisters::ports_implemented() const {
  // @@protoc_insertion_point(field_get:AhciHostState.ControlRegisters.ports_implemented)
  return ports_implemented_;
}
inline void AhciHostState_ControlRegisters::set_ports_implemented(::google::protobuf::uint32 value) {
  
  ports_implemented_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.ControlRegisters.ports_implemented)
}

// uint32 version = 5;
inline void AhciHostState_ControlRegisters::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_ControlRegisters::version() const {
  // @@protoc_insertion_point(field_get:AhciHostState.ControlRegisters.version)
  return version_;
}
inline void AhciHostState_ControlRegisters::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.ControlRegisters.version)
}

// -------------------------------------------------------------------

// AhciHostState_PortRegisters

// uint32 command_list_base0 = 1;
inline void AhciHostState_PortRegisters::clear_command_list_base0() {
  command_list_base0_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::command_list_base0() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.command_list_base0)
  return command_list_base0_;
}
inline void AhciHostState_PortRegisters::set_command_list_base0(::google::protobuf::uint32 value) {
  
  command_list_base0_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.command_list_base0)
}

// uint32 command_list_base1 = 2;
inline void AhciHostState_PortRegisters::clear_command_list_base1() {
  command_list_base1_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::command_list_base1() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.command_list_base1)
  return command_list_base1_;
}
inline void AhciHostState_PortRegisters::set_command_list_base1(::google::protobuf::uint32 value) {
  
  command_list_base1_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.command_list_base1)
}

// uint32 fis_base0 = 3;
inline void AhciHostState_PortRegisters::clear_fis_base0() {
  fis_base0_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::fis_base0() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.fis_base0)
  return fis_base0_;
}
inline void AhciHostState_PortRegisters::set_fis_base0(::google::protobuf::uint32 value) {
  
  fis_base0_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.fis_base0)
}

// uint32 fis_base1 = 4;
inline void AhciHostState_PortRegisters::clear_fis_base1() {
  fis_base1_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::fis_base1() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.fis_base1)
  return fis_base1_;
}
inline void AhciHostState_PortRegisters::set_fis_base1(::google::protobuf::uint32 value) {
  
  fis_base1_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.fis_base1)
}

// uint32 irq_status = 5;
inline void AhciHostState_PortRegisters::clear_irq_status() {
  irq_status_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::irq_status() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.irq_status)
  return irq_status_;
}
inline void AhciHostState_PortRegisters::set_irq_status(::google::protobuf::uint32 value) {
  
  irq_status_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.irq_status)
}

// uint32 irq_mask = 6;
inline void AhciHostState_PortRegisters::clear_irq_mask() {
  irq_mask_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::irq_mask() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.irq_mask)
  return irq_mask_;
}
inline void AhciHostState_PortRegisters::set_irq_mask(::google::protobuf::uint32 value) {
  
  irq_mask_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.irq_mask)
}

// uint32 command = 7;
inline void AhciHostState_PortRegisters::clear_command() {
  command_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::command() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.command)
  return command_;
}
inline void AhciHostState_PortRegisters::set_command(::google::protobuf::uint32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.command)
}

// uint32 task_flie_data = 8;
inline void AhciHostState_PortRegisters::clear_task_flie_data() {
  task_flie_data_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::task_flie_data() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.task_flie_data)
  return task_flie_data_;
}
inline void AhciHostState_PortRegisters::set_task_flie_data(::google::protobuf::uint32 value) {
  
  task_flie_data_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.task_flie_data)
}

// uint32 signature = 9;
inline void AhciHostState_PortRegisters::clear_signature() {
  signature_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::signature() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.signature)
  return signature_;
}
inline void AhciHostState_PortRegisters::set_signature(::google::protobuf::uint32 value) {
  
  signature_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.signature)
}

// uint32 sata_status = 10;
inline void AhciHostState_PortRegisters::clear_sata_status() {
  sata_status_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::sata_status() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.sata_status)
  return sata_status_;
}
inline void AhciHostState_PortRegisters::set_sata_status(::google::protobuf::uint32 value) {
  
  sata_status_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.sata_status)
}

// uint32 sata_control = 11;
inline void AhciHostState_PortRegisters::clear_sata_control() {
  sata_control_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::sata_control() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.sata_control)
  return sata_control_;
}
inline void AhciHostState_PortRegisters::set_sata_control(::google::protobuf::uint32 value) {
  
  sata_control_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.sata_control)
}

// uint32 sata_error = 12;
inline void AhciHostState_PortRegisters::clear_sata_error() {
  sata_error_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::sata_error() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.sata_error)
  return sata_error_;
}
inline void AhciHostState_PortRegisters::set_sata_error(::google::protobuf::uint32 value) {
  
  sata_error_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.sata_error)
}

// uint32 sata_active = 13;
inline void AhciHostState_PortRegisters::clear_sata_active() {
  sata_active_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortRegisters::sata_active() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortRegisters.sata_active)
  return sata_active_;
}
inline void AhciHostState_PortRegisters::set_sata_active(::google::protobuf::uint32 value) {
  
  sata_active_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortRegisters.sata_active)
}

// -------------------------------------------------------------------

// AhciHostState_PortState

// uint32 index = 1;
inline void AhciHostState_PortState::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 AhciHostState_PortState::index() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortState.index)
  return index_;
}
inline void AhciHostState_PortState::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortState.index)
}

// int32 busy_slot = 2;
inline void AhciHostState_PortState::clear_busy_slot() {
  busy_slot_ = 0;
}
inline ::google::protobuf::int32 AhciHostState_PortState::busy_slot() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortState.busy_slot)
  return busy_slot_;
}
inline void AhciHostState_PortState::set_busy_slot(::google::protobuf::int32 value) {
  
  busy_slot_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortState.busy_slot)
}

// bool init_d2h_sent = 3;
inline void AhciHostState_PortState::clear_init_d2h_sent() {
  init_d2h_sent_ = false;
}
inline bool AhciHostState_PortState::init_d2h_sent() const {
  // @@protoc_insertion_point(field_get:AhciHostState.PortState.init_d2h_sent)
  return init_d2h_sent_;
}
inline void AhciHostState_PortState::set_init_d2h_sent(bool value) {
  
  init_d2h_sent_ = value;
  // @@protoc_insertion_point(field_set:AhciHostState.PortState.init_d2h_sent)
}

// .AhciHostState.PortRegisters registers = 4;
inline bool AhciHostState_PortState::has_registers() const {
  return this != internal_default_instance() && registers_ != NULL;
}
inline void AhciHostState_PortState::clear_registers() {
  if (GetArenaNoVirtual() == NULL && registers_ != NULL) {
    delete registers_;
  }
  registers_ = NULL;
}
inline const ::AhciHostState_PortRegisters& AhciHostState_PortState::registers() const {
  const ::AhciHostState_PortRegisters* p = registers_;
  // @@protoc_insertion_point(field_get:AhciHostState.PortState.registers)
  return p != NULL ? *p : *reinterpret_cast<const ::AhciHostState_PortRegisters*>(
      &::_AhciHostState_PortRegisters_default_instance_);
}
inline ::AhciHostState_PortRegisters* AhciHostState_PortState::release_registers() {
  // @@protoc_insertion_point(field_release:AhciHostState.PortState.registers)
  
  ::AhciHostState_PortRegisters* temp = registers_;
  registers_ = NULL;
  return temp;
}
inline ::AhciHostState_PortRegisters* AhciHostState_PortState::mutable_registers() {
  
  if (registers_ == NULL) {
    registers_ = new ::AhciHostState_PortRegisters;
  }
  // @@protoc_insertion_point(field_mutable:AhciHostState.PortState.registers)
  return registers_;
}
inline void AhciHostState_PortState::set_allocated_registers(::AhciHostState_PortRegisters* registers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete registers_;
  }
  if (registers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      registers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, registers, submessage_arena);
    }
    
  } else {
    
  }
  registers_ = registers;
  // @@protoc_insertion_point(field_set_allocated:AhciHostState.PortState.registers)
}

// -------------------------------------------------------------------

// AhciHostState

// .AhciHostState.ControlRegisters control = 1;
inline bool AhciHostState::has_control() const {
  return this != internal_default_instance() && control_ != NULL;
}
inline void AhciHostState::clear_control() {
  if (GetArenaNoVirtual() == NULL && control_ != NULL) {
    delete control_;
  }
  control_ = NULL;
}
inline const ::AhciHostState_ControlRegisters& AhciHostState::control() const {
  const ::AhciHostState_ControlRegisters* p = control_;
  // @@protoc_insertion_point(field_get:AhciHostState.control)
  return p != NULL ? *p : *reinterpret_cast<const ::AhciHostState_ControlRegisters*>(
      &::_AhciHostState_ControlRegisters_default_instance_);
}
inline ::AhciHostState_ControlRegisters* AhciHostState::release_control() {
  // @@protoc_insertion_point(field_release:AhciHostState.control)
  
  ::AhciHostState_ControlRegisters* temp = control_;
  control_ = NULL;
  return temp;
}
inline ::AhciHostState_ControlRegisters* AhciHostState::mutable_control() {
  
  if (control_ == NULL) {
    control_ = new ::AhciHostState_ControlRegisters;
  }
  // @@protoc_insertion_point(field_mutable:AhciHostState.control)
  return control_;
}
inline void AhciHostState::set_allocated_control(::AhciHostState_ControlRegisters* control) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete control_;
  }
  if (control) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      control = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, control, submessage_arena);
    }
    
  } else {
    
  }
  control_ = control;
  // @@protoc_insertion_point(field_set_allocated:AhciHostState.control)
}

// repeated .AhciHostState.PortState ports = 2;
inline int AhciHostState::ports_size() const {
  return ports_.size();
}
inline void AhciHostState::clear_ports() {
  ports_.Clear();
}
inline const ::AhciHostState_PortState& AhciHostState::ports(int index) const {
  // @@protoc_insertion_point(field_get:AhciHostState.ports)
  return ports_.Get(index);
}
inline ::AhciHostState_PortState* AhciHostState::mutable_ports(int index) {
  // @@protoc_insertion_point(field_mutable:AhciHostState.ports)
  return ports_.Mutable(index);
}
inline ::AhciHostState_PortState* AhciHostState::add_ports() {
  // @@protoc_insertion_point(field_add:AhciHostState.ports)
  return ports_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::AhciHostState_PortState >*
AhciHostState::mutable_ports() {
  // @@protoc_insertion_point(field_mutable_list:AhciHostState.ports)
  return &ports_;
}
inline const ::google::protobuf::RepeatedPtrField< ::AhciHostState_PortState >&
AhciHostState::ports() const {
  // @@protoc_insertion_point(field_list:AhciHostState.ports)
  return ports_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ahci_5fhost_2eproto__INCLUDED
