// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ich9_hda.proto

#ifndef PROTOBUF_ich9_5fhda_2eproto__INCLUDED
#define PROTOBUF_ich9_5fhda_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ich9_5fhda_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsIch9HdaStateImpl();
void InitDefaultsIch9HdaState();
inline void InitDefaults() {
  InitDefaultsIch9HdaState();
}
}  // namespace protobuf_ich9_5fhda_2eproto
class Ich9HdaState;
class Ich9HdaStateDefaultTypeInternal;
extern Ich9HdaStateDefaultTypeInternal _Ich9HdaState_default_instance_;

// ===================================================================

class Ich9HdaState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Ich9HdaState) */ {
 public:
  Ich9HdaState();
  virtual ~Ich9HdaState();

  Ich9HdaState(const Ich9HdaState& from);

  inline Ich9HdaState& operator=(const Ich9HdaState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ich9HdaState(Ich9HdaState&& from) noexcept
    : Ich9HdaState() {
    *this = ::std::move(from);
  }

  inline Ich9HdaState& operator=(Ich9HdaState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ich9HdaState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ich9HdaState* internal_default_instance() {
    return reinterpret_cast<const Ich9HdaState*>(
               &_Ich9HdaState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Ich9HdaState* other);
  friend void swap(Ich9HdaState& a, Ich9HdaState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ich9HdaState* New() const PROTOBUF_FINAL { return New(NULL); }

  Ich9HdaState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Ich9HdaState& from);
  void MergeFrom(const Ich9HdaState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Ich9HdaState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes hda_registers = 1;
  void clear_hda_registers();
  static const int kHdaRegistersFieldNumber = 1;
  const ::std::string& hda_registers() const;
  void set_hda_registers(const ::std::string& value);
  #if LANG_CXX11
  void set_hda_registers(::std::string&& value);
  #endif
  void set_hda_registers(const char* value);
  void set_hda_registers(const void* value, size_t size);
  ::std::string* mutable_hda_registers();
  ::std::string* release_hda_registers();
  void set_allocated_hda_registers(::std::string* hda_registers);

  // uint64 wall_clock_counter = 3;
  void clear_wall_clock_counter();
  static const int kWallClockCounterFieldNumber = 3;
  ::google::protobuf::uint64 wall_clock_counter() const;
  void set_wall_clock_counter(::google::protobuf::uint64 value);

  // uint32 rirb_counter = 2;
  void clear_rirb_counter();
  static const int kRirbCounterFieldNumber = 2;
  ::google::protobuf::uint32 rirb_counter() const;
  void set_rirb_counter(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Ich9HdaState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hda_registers_;
  ::google::protobuf::uint64 wall_clock_counter_;
  ::google::protobuf::uint32 rirb_counter_;
  mutable int _cached_size_;
  friend struct ::protobuf_ich9_5fhda_2eproto::TableStruct;
  friend void ::protobuf_ich9_5fhda_2eproto::InitDefaultsIch9HdaStateImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ich9HdaState

// bytes hda_registers = 1;
inline void Ich9HdaState::clear_hda_registers() {
  hda_registers_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ich9HdaState::hda_registers() const {
  // @@protoc_insertion_point(field_get:Ich9HdaState.hda_registers)
  return hda_registers_.GetNoArena();
}
inline void Ich9HdaState::set_hda_registers(const ::std::string& value) {
  
  hda_registers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ich9HdaState.hda_registers)
}
#if LANG_CXX11
inline void Ich9HdaState::set_hda_registers(::std::string&& value) {
  
  hda_registers_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ich9HdaState.hda_registers)
}
#endif
inline void Ich9HdaState::set_hda_registers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hda_registers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ich9HdaState.hda_registers)
}
inline void Ich9HdaState::set_hda_registers(const void* value, size_t size) {
  
  hda_registers_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ich9HdaState.hda_registers)
}
inline ::std::string* Ich9HdaState::mutable_hda_registers() {
  
  // @@protoc_insertion_point(field_mutable:Ich9HdaState.hda_registers)
  return hda_registers_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ich9HdaState::release_hda_registers() {
  // @@protoc_insertion_point(field_release:Ich9HdaState.hda_registers)
  
  return hda_registers_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ich9HdaState::set_allocated_hda_registers(::std::string* hda_registers) {
  if (hda_registers != NULL) {
    
  } else {
    
  }
  hda_registers_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hda_registers);
  // @@protoc_insertion_point(field_set_allocated:Ich9HdaState.hda_registers)
}

// uint32 rirb_counter = 2;
inline void Ich9HdaState::clear_rirb_counter() {
  rirb_counter_ = 0u;
}
inline ::google::protobuf::uint32 Ich9HdaState::rirb_counter() const {
  // @@protoc_insertion_point(field_get:Ich9HdaState.rirb_counter)
  return rirb_counter_;
}
inline void Ich9HdaState::set_rirb_counter(::google::protobuf::uint32 value) {
  
  rirb_counter_ = value;
  // @@protoc_insertion_point(field_set:Ich9HdaState.rirb_counter)
}

// uint64 wall_clock_counter = 3;
inline void Ich9HdaState::clear_wall_clock_counter() {
  wall_clock_counter_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Ich9HdaState::wall_clock_counter() const {
  // @@protoc_insertion_point(field_get:Ich9HdaState.wall_clock_counter)
  return wall_clock_counter_;
}
inline void Ich9HdaState::set_wall_clock_counter(::google::protobuf::uint64 value) {
  
  wall_clock_counter_ = value;
  // @@protoc_insertion_point(field_set:Ich9HdaState.wall_clock_counter)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ich9_5fhda_2eproto__INCLUDED
